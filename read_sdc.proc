#! tclsh
proc read_sdc {arg1} {
	set sdc_dirname [file dirname $arg1]
	set sdc_filename [lindex [split [file tail $arg1] .] 0]
	set sdc [open $arg1 r]
	set tmp_file [open /tmp/1 w]
	#----------------- Remove [ ] brackets in sdc file ----------------------
	puts -nonewline $tmp_file [string map {"\[" "" "\]" ""} [read $sdc]]
	close $tmp_file
	set timing_file [open /tmp/3 w]
	set tmp_file [open /tmp/1 r]
	#------------------ Converting clock port  constraints -----------
	set lines [split [read $tmp_file] "\n"]
	set find_clocks [lsearch -all -inline $lines "create_clock*"]
	foreach elem $find_clocks {
		set clock_port_name [lindex $elem [expr {[lsearch $elem "get_ports"]+1}]]
		set clock_period [lindex $elem [expr {[lsearch $elem "-period"]+1}]]
		set duty_cycle [expr {100 - [expr {[lindex [lindex $elem [expr {[lsearch $elem "-waveform"]+1}]] 1]*100/$clock_period}]}]
		puts $timing_file "clock $clock_port_name $clock_period $duty_cycle"
		#puts "clock $clock_port_name $clock_period $duty_cycle"
	}
	close $tmp_file
	#-------------------Converting set_clock_latency -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_clock_latency*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_clocks"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_clocks"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nat $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	#-------------------Converting set_clock_transistion -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_clock_transition*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_clocks"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_clocks"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nslew $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	#-------------------Converting set_input_delay constraints -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_input_delay*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_ports"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_ports"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nat $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	#-------------------Converting set_input_transition constraints -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_input_transition*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_ports"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_ports"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nslew $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	#-------------------Converting set_output_delay constraints -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_output_delay*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_ports"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_ports"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nrat $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	#-------------------Converting set_load constraints -----------------
	set tmp2_file [open /tmp/2 w]
	set find_keyword [lsearch -all -inline $lines "set_load*"]
	set new_port_name ""
	foreach elem $find_keyword {
		set port_name [lindex $elem [expr {[lsearch $elem "get_ports"]+1}]]
		if {![string match $new_port_name $port_name]} {
			set new_port_name $port_name
        		#set delays_list [lsearch -all -inline $find_keyword [join [list "*" " " $port_name " " "*"] ""]]
			set delays_list [lsearch -all -inline $find_keyword "*$port_name*"]
			#puts "delay_list value $delays_list"
        		set delay_value ""
        		foreach new_elem $delays_list {
        			set port_index [lsearch $new_elem "get_ports"]
        			lappend delay_value [lindex $new_elem [expr {$port_index-1}]]
				#puts "\n delay value $delay_value"
			}
			puts -nonewline $tmp2_file "\nload $port_name $delay_value"
        	}
	}
	close $tmp2_file
	set tmp2_file [open /tmp/2 r]
	puts -nonewline $timing_file [read $tmp2_file]
	close $tmp2_file
	close $timing_file

	#------------------ expanding the multi-bit bus ---------
	
	set ot_timing_file [open $sdc_dirname/$sdc_filename.timing w]
	set timing_file [open /tmp/3 r]
	while {[gets $timing_file line] != -1} {
		if {[regexp -all -- {\*} $line]} {
			#set bussed [lindex [lindex [split $line "*"] 0] 1]
			set bussed [lindex [lindex [split $line "*"] 0] 1]
			puts "bus $bussed"
			set final_synth_netlist [open $sdc_dirname/$sdc_filename.final.synth.v r]
			while {[gets $final_synth_netlist line2] !=-1} {
				if {[regexp -all -- $bussed $line2] && [regexp -all -- {input} $line2] && ![string match "" $line]} {
					puts -nonewline $ot_timing_file "\n[lindex [lindex [split $line "*"] 0 ] 0 ] [lindex [lindex [split $line2 ";"] 0 ] 1 ] [lindex [split $line "*"] 1 ]"
				} elseif {[regexp -all -- $bussed $line2] && [regexp -all -- {output} $line2] && ![string match "" $line]} {
					puts -nonewline $ot_timing_file "\n[lindex [lindex [split $line "*"] 0 ] 0 ] [lindex [lindex [split $line2 ";"] 0 ] 1 ] [lindex [split $line "*"] 1 ]"
				}
			}
		} else {
			puts -nonewline $ot_timing_file "\n$line"
		}
	}	
	close $timing_file
	close $ot_timing_file
	puts "set_timing_fpath $sdc_dirname/$sdc_filename.timing"
	close $sdc
}

